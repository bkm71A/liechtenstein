<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:fx="http://ns.adobe.com/mxml/2009"
		   xmlns:mx="library://ns.adobe.com/flex/mx"
		   xmlns:s="library://ns.adobe.com/flex/spark"
		   width="182"
		   height="304"
		   borderStyle="solid"
		   cornerRadius="10">

	<mx:ComboBox id="channelParameterList"
				 x="10"
				 y="42"
				 width="158"
				 change="somethingChanged(event)" />

	<mx:Label x="10"
			  y="20"
			  width="150"
			  text="Channel Parameter" />

	<mx:Label x="10"
			  y="98"
			  width="110"
			  text="Sensitivity" />

	<mx:Label x="10"
			  y="156"
			  width="110"
			  text="Offset" />

	<mx:TextInput id="sensitivityTextInput"
				  x="10"
				  y="124"
				  width="100"
				  change="somethingChanged(event)" />

	<mx:TextInput id="offsetTextInput"
				  x="10"
				  y="180"
				  width="100"
				  change="somethingChanged(event)" />

	<mx:CheckBox id="ApplyAllCheckBox"
				 x="10"
				 y="214"
				 label="Apply to All"
				 click="applyAllChecked(event)" />

	<mx:Button id="submit"
			   x="10"
			   y="244"
			   width="87"
			   label="Update"
			   click="updateClicked()" />

	<mx:Label x="127"
			  y="124"
			  width="41"
			  text="Unit/V"
			  textAlign="right" />

	<mx:Label x="127"
			  y="180"
			  width="41"
			  text="Unit"
			  textAlign="right" />

	<mx:Image x="155"
			  y="1"
			  width="16"
			  height="16"
			  source="resources/stop.png"
			  click="removeMySelf()" />

	<mx:Label id="channelName"
			  x="10"
			  y="0"
			  width="133"
			  fontWeight="bold"
			  color="#305D67" />

	<fx:Script>
		<![CDATA[

			import com.incheck.IncheckModel;
			import mx.rpc.events.FaultEvent;
			import mx.collections.ArrayCollection;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.remoting.RemoteObject;
			import com.incheck.common.ICNode;
			import com.incheck.common.ChannelConfig;
			import mx.controls.Alert;

			public var myNode:ICNode;

			public var unitListArr:ArrayCollection;

			public var serverData:ArrayCollection;


			public function setNode(node:ICNode):void
			{
				myNode = node;
				getChannelConfig();
			}


			public function somethingChanged(event:Event):void
			{
				if (ApplyAllCheckBox.selected)
				{
				}
			}


			public function applyAllChecked(event:Event):void
			{
			}


			public function disableMe():void
			{
				channelParameterList.enabled = false;
				sensitivityTextInput.enabled = false;
				offsetTextInput.enabled = false;
				ApplyAllCheckBox.selected = false;
				ApplyAllCheckBox.enabled = false;
				submit.enabled = false;
			}


			public function enableMe():void
			{
				channelParameterList.enabled = true;
				sensitivityTextInput.enabled = true;
				offsetTextInput.enabled = true;
				ApplyAllCheckBox.selected = false;
				ApplyAllCheckBox.enabled = true;
				submit.enabled = true;
			}


			public function getChannelConfig():void
			{
			/*
			var ro:RemoteObject = new RemoteObject("icNodes");
			ro.addEventListener(ResultEvent.RESULT, onGetChannelConfigResult);
			ro.addEventListener(FaultEvent.FAULT, onGetChannelConfigFault);
			ro.getChannelConfigById(myNode.channelid as int);
			*/
			}


			private function onGetChannelConfigResult(event:ResultEvent):void
			{
				var channelConfig:ChannelConfig = event.result as ChannelConfig;
			}


			private function onGetChannelConfigFault(event:FaultEvent):void
			{
				Alert.show('Error: ' + event.fault.faultString, 'Error Occurred');
			}


			public function removeMySelf():void
			{
				parent.removeChild(this);
			}


			public function updateClicked():void
			{
			}

		]]>
	</fx:Script>

</mx:Canvas>
