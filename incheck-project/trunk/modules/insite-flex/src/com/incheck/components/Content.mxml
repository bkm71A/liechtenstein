<?xml version="1.0" encoding="utf-8"?>
<s:BorderContainer xmlns:components="com.incheck.components.*"
		 xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 styleName="contentBackground"
		 creationComplete="onCreationComplete()">

	<fx:Script>
		<![CDATA[
			
			import com.incheck.IncheckModel;
			import com.incheck.common.User;
			import com.incheck.components.events.InCheckEvent;
			import com.incheck.model.LoginModel;
			
			import org.alivepdf.layout.Mode;
			import org.alivepdf.layout.Orientation;
			import org.alivepdf.layout.Position;
			import org.alivepdf.layout.Resize;
			import org.alivepdf.layout.Size;
			import org.alivepdf.layout.Unit;
			import org.alivepdf.pdf.PDF;
			import org.alivepdf.saving.Method;
			
			import spark.skins.spark.PanelSkin;

			[Bindable]
			private var _loginModel:LoginModel = new LoginModel();


			private function onCreationComplete():void
			{
/*
				var panelSkin:PanelSkin = skin as PanelSkin;
				panelSkin.topGroup.includeInLayout = false;
				panelSkin.topGroup.visible = false;
 */
				_loginModel.addEventListener(LoginModel.LOGIN_COMPLETE, onLoginComplete);
				mainViewStack.addEventListener(InCheckEvent.SAVE_GRAPH, onSaveGraph, true);
			}


			private function onLoginComplete(event:Event):void
			{
				mainViewStack.selectedIndex = 1;
				var user:User = IncheckModel.instance().currentUser;
				welcomeTag.text = 'Welcome ' + user.firstName + ' ' + user.lastName;
				logoutTag.visible = true;
			}


			private function logOut():void
			{
				welcomeTag.text = '';
				logoutTag.visible = false;
				_loginModel.clearLogin();
				mainViewStack.selectedIndex = 0;
			}


			private function onSaveGraph(event:InCheckEvent):void
			{
				var p:PDF = new PDF(Orientation.LANDSCAPE, Unit.MM, Size.A4);
				p.addPage();
				var bitmapData:BitmapData = new BitmapData(leftNavigator.width + rightNavigator.width, Math.max(leftNavigator.height, rightNavigator.height));
				rightNavigator.getGraphImage(bitmapData, leftNavigator.width);
				leftNavigator.getChannelImages(bitmapData, rightNavigator.selectedIndex - 1, rightNavigator.width);
				var bitmap:Bitmap = new Bitmap(bitmapData);
				p.addImage(bitmap, new Resize(Mode.RESIZE_PAGE, Position.CENTERED));
				saveImage(p);
			}


			private function saveImage(p:PDF):void
			{
				var file:FileReference = new FileReference();
				var bytes:ByteArray = p.save(Method.LOCAL);
				file.save(bytes, "generated.pdf.pdf");
			}

		]]>
	</fx:Script>
	
	
	<s:backgroundFill>
		
		<s:LinearGradient rotation="90">
			
			<s:entries>
				
				<s:GradientEntry color="{getStyle('backgroundColor1')}" />
				
				<s:GradientEntry color="{getStyle('backgroundColor2')}" />
				
			</s:entries>
			
		</s:LinearGradient>
		
	</s:backgroundFill>
	

	<s:VGroup width="100%" height="100%"
			  horizontalAlign="center" verticalAlign="middle">

		<s:Group width="100%">

			<s:BitmapImage id="logo1"
						   x="5" y="5"
						   source="resources/title_GUI.png"
						   horizontalAlign="left" />

			<s:HGroup right="0"
					  width="100%"
					  horizontalAlign="right"
					  verticalAlign="middle">

				<s:Label id="welcomeTag"
						 fontSize="14"
						 color="white" />

				<s:Label id="logoutTag"
						 text="Logout"
						 textDecoration="underline"
						 fontSize="14"
						 color="white" buttonMode="true" 
						 mouseChildren="false" useHandCursor="true" visible="false"
						 click="logOut();" />

				<s:BitmapImage id="logo"
							   x="0"
							   y="0"
							   source="resources/logo_GUI4.png"
							   horizontalAlign="right" />
			</s:HGroup>

		</s:Group>


		<mx:ViewStack id="mainViewStack"
					  width="100%" height="100%"
					  paddingLeft="5" paddingRight="5" paddingBottom="5">

			<s:NavigatorContent>

				<components:LoginView id="loginScreen" loginModel="{_loginModel}" />

			</s:NavigatorContent>

			<s:NavigatorContent>

				<mx:HDividedBox x="0"
								width="100%" height="100%">

					<components:LeftNavigator id="leftNavigator"
											  width="217" height="100%"
											  minWidth="217" maxWidth="350" />

					<components:RightNavigator id="rightNavigator" />

				</mx:HDividedBox>

			</s:NavigatorContent>

		</mx:ViewStack>

	</s:VGroup>

</s:BorderContainer>
